<%= form_for @material,:url => '/materials/quickupdate', html: {id: 'quick_form', method:'path', role: 'form',class:'form-horizontal'} do |f| %>
  <div class="widget ">
    <div class="widget-body">
      <div  id="panelmaterial" class="innerLR">
        <div class="material" id="material<%=@material.id%>" >
          <input name="material_id" value="<%=@material.id%>" type=hidden>
          <div class="form-group" >
            <label for="material_name" class="col-md-2 control-label"><%= t('material.lb_material_name') %><span class="requiredfield">*</span></label>
            <div class="col-md-10">
              <%= f.hidden_field :id, class: "form-control"%>
              <%= f.text_field :material_name, class: "form-control requiredfield100 name_update", placeholder: t('material.lb_material_name'),maxlength:100,autofocus:"autofocus" %>
            </div>
          </div>
          <div class="form-group" >
            <label for="material_type_id" class="col-md-2 control-label"><%= t('material.lb_type') %></label>
            <div class="col-md-10">
              <%= select_tag "material[material_type_id]", options_from_collection_for_select(MaterialType.all, "id", "material_type_name",@material.material_type.id),{ class: 'selectpicker form-control type_update' } %>
            </div>
          </div>
          <div class="form-group" >
            <label for="material_url" class="col-md-2 control-label"><%= t('material.lb_url') %></label>
            <div class="col-md-10">
              <%= f.text_field :material_url, class: "form-control urlformat url_update", placeholder: t('material.lb_url'),maxlength:500 %>
            </div>
          </div>
          <div class="form-group" >
            <label for="description" class="col-md-2 control-label"><%= t('material.lb_description') %></label>
            <div class="col-md-10">
              <%= f.text_area "description", class: 'form-control summernote summernoteMaterial description_update' , placeholder: t('material.lb_description'),rows:2 %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


<script>
    $('.summernoteMaterial').summernote({
        lang: 'ja-JP',
        height: 100,
        onblur: function(e) {
            var content = $(this).html();
            var SCRIPT_REGEX = /&lt;script\b[^<]*(?:(?!&lt;\/script&gt;)<[^<]*)*&lt;\/script&gt;/gi;
            content = content.replace(SCRIPT_REGEX,"");
            $(this).parent("div.note-editor").siblings("textarea.summernoteMaterial").html(content);
            $(this).html(content)
        }
    });
    $('.selectpicker').selectpicker({
        size: 10
    });

    $.validator.messages.required = "<%= t('js.validate.msg_required')%>";
    $.validator.messages.url = "<%= t('js.validate.msg_url_invalid')%>";
    $.validator.messages.maxlength = "<%= t('js.validate.msg_maxlength')%>";
    $.validator.addMethod("validSummernote", function(value, element) {
        return this.optional(element) || !(value.length>10000);
    }, "<%= t('curriculum.msg_description_maxlength')%>");
    $.validator.addClassRules("requiredfield100", {
        maxlength:100,
        required: {
            depends:function(){
                var text = $.trim($(this).val());
                text=text.replace(/\s+/g, ' ');
                $(this).val(text);
                return true;
            }
        }
    });
    $.validator.addClassRules("urlformat", {
        url: true,
        maxlength:500
    });

    $.validator.addClassRules("summernote", {
        validSummernote: true
    });
    $("#quick_form").validate({
        ignore: ':hidden:not("textarea.summernote")', //ignore fields
        onfocusout: false,
        onkeyup: false,
        errorPlacement: function (error, element) {
            error.insertAfter(element);
        },
        submitHandler: function (form) {
//            $('#signup_form').find('input:text').each(function(){
//                $(this).val($.trim($(this).val()));
//            });
//            form.submit();

        },
        invalidHandler: function(form, validator) {
            $('#div_msg_error').text('');

            var errors = validator.numberOfInvalids();
            if (errors) {
                validator.errorList[0].element.focus();
            }
        }
    });
</script>
<% end %>